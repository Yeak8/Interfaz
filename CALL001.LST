Microsoft (R) Macro Assembler Version 5.10                  5/17/23 23:25:19
Practica6                                                   Page     1-1


       1				     TITLE Practica6
       2				
       3				     COMMENT *practica CALL*
       4				
       5 0000				     stack   segment para stack 'STACK'
					        
       6 0000  0040[			         db 64 dup ("STACK   ")        
       7	   53 54 41 43 4B	
       8	   20 20 20		
       9			 ]	
      10				
      11 0200				     stack   ends
      12				
      13 0000				     data segment para public 'data' 
      14				
      15 0000  0A 0D 50 72 61 63	         texto1 db 0AH,0DH,"Practica 6 
					utilizando CALL","$"
      16       74 69 63 61 20 36	
      17       20 75 74 69 6C 69	
      18       7A 61 6E 64 6F 20	
      19       43 41 4C 4C 24		
      20 001D  0A 0D 49 6E 73 65			texto2 db 0AH,0DH,"Inse
					rte el numero de dos digitos elegido,"
      21       72 74 65 20 65 6C	
      22       20 6E 75 6D 65 72	
      23       6F 20 64 65 20 64	
      24       6F 73 20 64 69 67	
      25       69 74 6F 73 20 65	
      26       6C 65 67 69 64 6F	
      27       2C			
      28 0048  0A 0D 65 6A 65 6D				   db 0AH,0DH,"
					ejemplo: (Si quiere el numero 5, insert
					e 05). :","$"
      29       70 6C 6F 3A 20 28	
      30       53 69 20 71 75 69	
      31       65 72 65 20 65 6C	
      32       20 6E 75 6D 65 72	
      33       6F 20 35 2C 20 69	
      34       6E 73 65 72 74 65	
      35       20 30 35 29 2E 20	
      36       3A 24			
      37 007A  0A 0D 49 6E 67 72			texto3 db 0AH,0DH,"Ingr
					ese 1 para ordenar descendentemente o 0
					 para ascendente","$"
      38       65 73 65 20 31 20	
      39       70 61 72 61 20 6F	
      40       72 64 65 6E 61 72	
      41       20 64 65 73 63 65	
      42       6E 64 65 6E 74 65	
      43       6D 65 6E 74 65 20	
      44       6F 20 30 20 70 61	
      45       72 61 20 61 73 63	
      46       65 6E 64 65 6E 74	
      47       65 24			
Microsoft (R) Macro Assembler Version 5.10                  5/17/23 23:25:19
Practica6                                                   Page     1-2


      48 00B8  0A 0D 53 69 20 64			texto4 db 0AH,0DH,"Si d
					esea ordenar nuevamente presione 1, de 
					lo contrario presione cualquier tecla."
					,0AH,0DH,"$"
      49       65 73 65 61 20 6F	
      50       72 64 65 6E 61 72	
      51       20 6E 75 65 76 61	
      52       6D 65 6E 74 65 20	
      53       70 72 65 73 69 6F	
      54       6E 65 20 31 2C 20	
      55       64 65 20 6C 6F 20	
      56       63 6F 6E 74 72 61	
      57       72 69 6F 20 70 72	
      58       65 73 69 6F 6E 65	
      59       20 63 75 61 6C 71	
      60       75 69 65 72 20 74	
      61       65 63 6C 61 2E 0A	
      62       0D 24			
      63 010E  0A 0D 24					texto5 db 0AH,0DH,"$"
      64 0111  0000 0000 0000 0000			numeros dw 0h,0h,0h,0h,
					0h,0h,0h,0h,0h,0h,"$"
      65       0000 0000 0000 0000	
      66       0000 0000 0024		
      67 0127				     data ends
      68				
      69 0000					 code segment para public 'code
					'
      70					 assume cs:code,ss:stack,ds:dat
					a
      71					 
      72 0000					 prueba proc far  
      73 0000  1E			         PUSH DS
      74 0001  2B C0			         SUB AX,AX
      75 0003  50			         PUSH AX	   
      76 0004  B8 ---- R		         MOV AX,SEG DATA;Estas dos inst
					rucciones siempre las van a poner
      77 0007  8E D8			         MOV DS,AX
      78						 
      79				
      80 0009						 INICIO_PROGRAMA:     
      81						 
      82 0009  B4 09					 MOV AH,09H      ;para 
					imprimir en pantalla los nombres
      83 000B  8D 16 0000 R				 LEA DX,texto1     ;sir
					ve para leer lo que esta en la variable
					 que se va imprimir
      84 000F  CD 21					 INT 21H          ;para
					 ejecutar la funcion
      85						 
      86 0011  E8 008D R				 CALL INGRESONUMEROS   
					;utilizamos call llamando al ingresar n
					umeros
      87						 
      88 0014						 orden:              ;u
Microsoft (R) Macro Assembler Version 5.10                  5/17/23 23:25:19
Practica6                                                   Page     1-3


					tilizamos saltos
      89 0014  B4 09					 MOV AH,09H          
      90 0016  8D 16 007A R				 LEA DX,texto3
      91 001A  CD 21					 INT 21H
      92						 
      93 001C  B4 01					 MOV AH,01H
      94 001E  CD 21					 INT 21H
      95 0020  3C 30					 CMP AL,48
      96 0022  74 24					 JE ASC
      97 0024  3C 31					 CMP AL,49
      98 0026  74 02					 JE DESC
      99 0028  EB EA					 JMP orden
     100						 
     101 002A						 DESC:
     102 002A  E8 00B6 R				 CALL ORDENAR_DESC     
					;call ordenar descendentemente
     103 002D  7C FB					 JL DESC
     104 002F  BF 0000					 MOV DI,0
     105 0032  46					 INC SI
     106 0033  46					 INC SI
     107 0034  83 FE 14					 CMP SI,20
     108 0037  7C F1					 JL DESC
     109						 
     110 0039  EB 29 90					 JMP CONTINUA
     111						 
     112 003C						 SALTOMAYOR:
     113 003C  89 85 0111 R				 MOV numeros[DI],AX
     114 0040  89 9C 0111 R				 MOV numeros[SI],BX
     115 0044  EB E4					 JMP DESC
     116						 
     117 0046						 SALTO_INTERMEDIO:
     118 0046  EB C1					 JMP INICIO_PROGRAMA
     119						 
     120 0048						 ASC:
     121 0048  E8 00C8 R				 CALL ORDENAR_ASC    ;c
					all orden ascendente
     122 004B  7C FB					 JL ASC
     123						 
     124 004D  BF 0000					 MOV DI,0
     125 0050  46					 INC SI
     126 0051  46					 INC SI
     127 0052  83 FE 14					 CMP SI,20
     128 0055  7C F1					 JL ASC
     129						 
     130 0057  EB 0B 90					 JMP CONTINUA
     131						 
     132 005A						 SALTOMENOR:
     133 005A  89 85 0111 R				 MOV numeros[DI],AX
     134 005E  89 9C 0111 R				 MOV numeros[SI],BX
     135 0062  EB E4					 JMP ASC
     136						 
     137 0064						 CONTINUA:
     138 0064  B4 09					 MOV AH,09H
     139 0066  8D 16 010E R				 LEA DX,texto5
Microsoft (R) Macro Assembler Version 5.10                  5/17/23 23:25:19
Practica6                                                   Page     1-4


     140 006A  CD 21					 INT 21H
     141 006C  BE 0000					 MOV SI,0
     142						 
     143 006F						 CICLO_IMPRESION:
     144 006F  E8 00DA R				 CALL IMPRIMIR         
					 ;por ultimo call imprimir
     145 0072  7C FB					 JL CICLO_IMPRESION
     146						 
     147 0074  B4 09					 MOV AH,09H
     148 0076  8D 16 00B8 R				 LEA DX,texto4
     149 007A  CD 21					 INT 21H
     150						 
     151 007C  B8 0000					 MOV AX,0
     152 007F  B4 01					 MOV AH,01H
     153 0081  CD 21					 INT 21H
     154 0083  3C 31					 CMP AL,49
     155 0085  74 BF					 JE SALTO_INTERMEDIO
     156 0087  EB 01 90					 jmp salir
     157						
     158 008A						 salir:
     159 008A  CB						RET
     160						
     161 008B				     prueba endp
     162					 
     163						 
     164 008B						 SALTOMAYOR1:
     165 008B  EB AF						jmp SALTOMAYOR
     166						 
     167 008D						 INGRESONUMEROS PROC NE
					AR
     168 008D  BE 0000					     MOV SI,0
     169 0090						     CICLO_INGRESONUMER
					OS:
     170 0090  B4 09						 MOV AH,09H
     171 0092  8D 16 001D R					 LEA DX,texto2
     172 0096  CD 21						 INT 21H
     173							 
     174 0098  B4 01						 MOV AH,01H
     175 009A  CD 21						 INT 21H
     176 009C  8A F8						 MOV BH,AL
     177							 
     178 009E  B4 01						 MOV AH,01H
     179 00A0  CD 21						 INT 21H
     180 00A2  8A D8						 MOV BL,AL
     181 00A4  89 9C 0111 R					 MOV numeros[SI
					],BX
     182							 
     183 00A8  46						 INC SI
     184 00A9  46						 INC SI
     185 00AA  83 FE 14						 CMP SI,20
     186 00AD  7C E1						 JL CICLO_INGRE
					SONUMEROS
     187 00AF  BE 0000						 MOV SI,0
     188 00B2  BF 0000						 MOV DI,0
Microsoft (R) Macro Assembler Version 5.10                  5/17/23 23:25:19
Practica6                                                   Page     1-5


     189							 
     190 00B5  C3						 RET
     191 00B6						 INGRESONUMEROS ENDP
     192						 
     193 00B6						 ORDENAR_DESC PROC NEAR
     194						     
     195 00B6  8B 84 0111 R					 MOV AX,numeros
					[SI]
     196 00BA  8B 9D 0111 R					 MOV BX,numeros
					[DI]
     197							 
     198 00BE  3B C3						 CMP AX,BX
     199 00C0  7F C9						 JG SALTOMAYOR1
     200 00C2  47						 INC DI
     201 00C3  47						 INC DI
     202 00C4  83 FF 14						 CMP DI,20
     203							 
     204 00C7  C3						 RET
     205 00C8						 ORDENAR_DESC ENDP
     206				
     207 00C8						 ORDENAR_ASC PROC NEAR
     208						    
     209 00C8  8B 84 0111 R					 MOV AX,numeros
					[SI]
     210 00CC  8B 9D 0111 R					 MOV BX,numeros
					[DI]
     211							 
     212 00D0  3B C3						 CMP AX,BX
     213 00D2  7C 86						 JL SALTOMENOR
     214 00D4  47						 INC DI
     215 00D5  47						 INC DI
     216 00D6  83 FF 14						 CMP DI,20
     217 00D9  C3						 RET
     218 00DA						 ORDENAR_ASC ENDP
     219				
     220 00DA						 IMPRIMIR PROC NEAR
     221 00DA  8B 9C 0111 R				     MOV BX,numeros[SI]
     222 00DE  8A D7						 MOV DL,BH
     223 00E0  B4 06						 MOV AH,06H
     224 00E2  CD 21						 INT 21H
     225							 
     226 00E4  8A D3						 MOV DL,BL
     227 00E6  B4 06						 MOV AH,06H
     228 00E8  CD 21						 INT 21H
     229							 
     230 00EA  B4 09						 MOV AH,09H
     231 00EC  8D 16 010E R					 LEA DX,texto5
     232 00F0  CD 21						 INT 21H
     233							 
     234 00F2  46						 INC SI
     235 00F3  46						 INC SI
     236 00F4  83 FE 14						 CMP SI,20
     237 00F7  C3						 RET
     238 00F8						 IMPRIMIR ENDP
Microsoft (R) Macro Assembler Version 5.10                  5/17/23 23:25:19
Practica6                                                   Page     1-6


     239						 
     240						 
     241				
     242 00F8				     code ends
     243				
     244				     END prueba
Microsoft (R) Macro Assembler Version 5.10                  5/17/23 23:25:19
Practica6                                                   Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	00F8	PARA	PUBLIC	'CODE'
DATA . . . . . . . . . . . . . .  	0127	PARA	PUBLIC	'DATA'
STACK  . . . . . . . . . . . . .  	0200	PARA	STACK	'STACK'

Symbols:            

                N a m e         	Type	 Value	 Attr

ASC  . . . . . . . . . . . . . .  	L NEAR	0048	CODE

CICLO_IMPRESION  . . . . . . . .  	L NEAR	006F	CODE
CICLO_INGRESONUMEROS . . . . . .  	L NEAR	0090	CODE
CONTINUA . . . . . . . . . . . .  	L NEAR	0064	CODE

DESC . . . . . . . . . . . . . .  	L NEAR	002A	CODE

IMPRIMIR . . . . . . . . . . . .  	N PROC	00DA	CODE	Length = 001E
INGRESONUMEROS . . . . . . . . .  	N PROC	008D	CODE	Length = 0029
INICIO_PROGRAMA  . . . . . . . .  	L NEAR	0009	CODE

NUMEROS  . . . . . . . . . . . .  	L WORD	0111	DATA

ORDEN  . . . . . . . . . . . . .  	L NEAR	0014	CODE
ORDENAR_ASC  . . . . . . . . . .  	N PROC	00C8	CODE	Length = 0012
ORDENAR_DESC . . . . . . . . . .  	N PROC	00B6	CODE	Length = 0012

PRUEBA . . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 008B

SALIR  . . . . . . . . . . . . .  	L NEAR	008A	CODE
SALTOMAYOR . . . . . . . . . . .  	L NEAR	003C	CODE
SALTOMAYOR1  . . . . . . . . . .  	L NEAR	008B	CODE
SALTOMENOR . . . . . . . . . . .  	L NEAR	005A	CODE
SALTO_INTERMEDIO . . . . . . . .  	L NEAR	0046	CODE

TEXTO1 . . . . . . . . . . . . .  	L BYTE	0000	DATA
TEXTO2 . . . . . . . . . . . . .  	L BYTE	001D	DATA
TEXTO3 . . . . . . . . . . . . .  	L BYTE	007A	DATA
TEXTO4 . . . . . . . . . . . . .  	L BYTE	00B8	DATA
TEXTO5 . . . . . . . . . . . . .  	L BYTE	010E	DATA

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  call001		
@VERSION . . . . . . . . . . . .  	TEXT  510		

Microsoft (R) Macro Assembler Version 5.10                  5/17/23 23:25:19
Practica6                                                   Symbols-2



    195 Source  Lines
    195 Total   Lines
     31 Symbols

  46270 + 439438 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors

Microsoft (R) Macro Assembler Version 5.10                  4/29/23 08:38:59
Primer Programa en Ensamblador                              Page     1-1


       1				PAGE 40,132
       2				
       3				TITLE Primer Programa en Ensamblador
       4				
       5				COMMENT * Este programa pretende mostrar en conjunto del debuguer
       6				          los diferentes registros del sistemas y unas operaciones
       7				          basicas que permitan tener un primer acercamiento al en-
       8				          samblador y al MASM51*
       9				
      10				;se inicializara el stack a continuacion
      11				
      12				
      13				;PUBLIC PROCEDIMIENTO
      14				
      15 0000				stack   segment para stack 'STACK'        
      16 0000  0040[			        db 64 dup ("STACK   ")        
      17	   53 54 41 43 4B	
      18	   20 20 20		
      19			 ]	
      20				
      21 0200				stack   ends
      22				
      23 0000				data segment para memory 'data'      
      24 0000  23 5F 23 5B 23 48		DATOS	DB 35, 95, 35, 91, 35, 72, 11, 88, 18, 55
      25       0B 58 12 37		
      26 000A  52 1F 12 1F 41 52				DB 82, 31, 18, 31, 65, 82, 55, 7, 18, 63
      27       37 07 12 3F		
      28 0014  18 20 5C 14 13 4F				DB 24, 32, 92, 20, 19, 79, 3, 11, 19, 49
      29       03 0B 13 31		
      30 001E  17 2C 13 2A 2A 23				DB 23, 44, 19, 42, 42, 35, 48, 19, 22, 81
      31       30 13 16 51		
      32 0028  13 15 0F 2A 14 0D				DB 19, 21, 15, 42, 20, 13, 11, 24, 23, 55
      33       0B 18 17 37		
      34 0032  12 12 11 10 3E 22				DB 18, 18, 17, 16, 62, 34, 13, 60, 21, 72
      35       0D 3C 15 48		
      36 003C  4D 2B 1A 34 5A 49				DB 77, 43, 26, 52, 90, 73, 6, 20, 18, 49
Microsoft (R) Macro Assembler Version 5.10                  4/29/23 08:38:59
Primer Programa en Ensamblador                              Page     1-2


      37       06 14 12 31		
      38 0046  15 14 3C 32 2B 33				DB 21, 20, 60, 50, 43, 51, 34, 95, 54, 19
      39       22 5F 36 13		
      40 0050  5D 10 0F 0A 14 15				DB 93, 16, 15, 10, 20, 21, 20, 20, 58, 48
      41       14 14 3A 30		
      42 005A  0C 22 5D 14 13 36				DB 12, 34, 93, 20, 19, 54, 19, 39, 27, 50
      43       13 27 1B 32		
      44 0064  00				minimo DB 0
      45 0065  00				maximo DB 0	
      46				
      47 0066				data ends
      48				
      49 0000				code segment para 'code'
      50					assume cs:code,ss:stack,ds:data
      51				
      52 0000				prueba proc far       
      53 0000  B8 ---- R				MOV AX,SEG DATA;Estas dos instrucciones siempre las van a poner
      54 0003  8E D8					MOV DS,AX
      55 0005  BE 0000					MOV SI, 0H
      56				
      57						;Cargamos el primer numero del arreglo tanto al minimo como al maximo
      58 0008  B8 0000					MOV AX, 0H
      59 000B  BB 0000					MOV BX, 0H
      60 000E  8A 84 0000 R				MOV AL, DATOS[SI]
      61 0012  A2 0064 R				MOV minimo, AL
      62 0015  8A 9C 0000 R				MOV BL, DATOS[SI]
      63 0019  88 1E 0065 R				MOV maximo, BL
      64						
      65						
      66 001D  B9 0064					MOV CX, 100
      67 0020						otro_loop:
      68							; Comparamos el número actual con el máximo
      69 0020  8A 84 0000 R					mov al, DATOS[SI]
      70 0024  3A 06 0065 R					cmp al, maximo
      71 0028  72 06						JB es_menor
      72 002A  A2 0065 R					mov maximo, al
Microsoft (R) Macro Assembler Version 5.10                  4/29/23 08:38:59
Primer Programa en Ensamblador                              Page     1-3


      73 002D  EB 0A 90						JMP no_es_menor
      74 0030							es_menor:
      75								; Comparamos el número actual con el mínimo
      76 0030  38 06 0064 R						cmp minimo, al
      77 0034  76 03							jbe no_es_menor
      78 0036  A2 0064 R						mov minimo, al
      79				
      80				
      81 0039							no_es_menor:
      82								; Avanzamos al siguiente número del arreglo
      83 0039  46							inc SI
      84 003A  49							dec CX
      85 003B  E2 E3							LOOP otro_loop
      86						
      87						
      88 003D  A0 0064 R				MOV AL, minimo
      89 0040  8A 1E 0065 R				MOV BL, maximo
      90							
      91						;Fin del programa del programa
      92				
      93					   
      94				
      95 0044				prueba endp
      96				
      97 0044				code ends
      98				
      99				END prueba
Microsoft (R) Macro Assembler Version 5.10                  4/29/23 08:38:59
Primer Programa en Ensamblador                              Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	0044	PARA	NONE	'CODE'
DATA . . . . . . . . . . . . . .  	0066	PARA	MEMORY	'DATA'
STACK  . . . . . . . . . . . . .  	0200	PARA	STACK	'STACK'

Symbols:            

                N a m e         	Type	 Value	 Attr

DATOS  . . . . . . . . . . . . .  	L BYTE	0000	DATA

ES_MENOR . . . . . . . . . . . .  	L NEAR	0030	CODE

MAXIMO . . . . . . . . . . . . .  	L BYTE	0065	DATA
MINIMO . . . . . . . . . . . . .  	L BYTE	0064	DATA

NO_ES_MENOR  . . . . . . . . . .  	L NEAR	0039	CODE

OTRO_LOOP  . . . . . . . . . . .  	L NEAR	0020	CODE

PRUEBA . . . . . . . . . . . . .  	F PROC	0000	CODE	Length = 0044

@CPU . . . . . . . . . . . . . .  	TEXT  0101h		
@FILENAME  . . . . . . . . . . .  	TEXT  PRAC5		
@VERSION . . . . . . . . . . . .  	TEXT  510		

Microsoft (R) Macro Assembler Version 5.10                  4/29/23 08:38:59
Primer Programa en Ensamblador                              Symbols-2



     85 Source  Lines
     85 Total   Lines
     15 Symbols

  46300 + 445520 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
